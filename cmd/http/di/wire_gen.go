// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"weex_admin/internal/adapter/http"
	"weex_admin/internal/adapter/http/auth"
	"weex_admin/internal/adapter/http/middleware"
	"weex_admin/internal/adapter/http/user"
	"weex_admin/internal/application/services"
	"weex_admin/internal/bootstrap"
	"weex_admin/internal/context"
	"weex_admin/internal/infrastructure/database"
	"weex_admin/internal/infrastructure/jwt"
	"weex_admin/internal/infrastructure/repositories/gorm"
)

// Injectors from wire.go:

func InitializeApp(appContext *context.AppContext, databaseConf *database.DatabaseConfig, jwtConf *jwt.JWTManagerConf) (*App, error) {
	jwtManager := jwt.NewJWTManager(jwtConf)
	db, err := database.NewDatabase(databaseConf)
	if err != nil {
		return nil, err
	}
	dbTransactioner := gorm.NewDBTransaction(db)
	userRepository := gorm.NewUserRepository(db)
	roleRepository := gorm.NewRoleRepository(db)
	authRepository := gorm.NewAuthRepository(db)
	authService := services.NewAuthService(dbTransactioner, userRepository, roleRepository, authRepository, jwtManager)
	middlewareManager := middleware.NewMiddlewareManager(jwtManager, authService)
	authController := auth.NewAuthController(authService)
	userController := user.NewUserController(authService, jwtManager)
	engine := http.NewV1Router(middlewareManager, authController, userController)
	databaseInitializer := bootstrap.NewDatabaseInitializer(db, dbTransactioner, authService, authRepository)
	app := NewApp(appContext, engine, databaseInitializer, db, authRepository, authService, userRepository)
	return app, nil
}
